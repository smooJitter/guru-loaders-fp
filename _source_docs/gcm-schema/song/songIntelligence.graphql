type SwipeMetrics {
  songId: ID!
  matchRate: Float!
  engagementScore: Float!
}

type CreditMetrics {
  songId: ID!
  tipperCount: Int!
  avgTipPerUser: Float!
  tipFrequency: Float!
}

type TimePattern {
  hour: Int!
  engagement: Float!
}

type GenreMetrics {
  genre: String!
  engagementPerSong: Float!
  popularity: Float!
}

type SongEngagementMetrics {
  swipeMetrics: [SwipeMetrics!]!
  creditMetrics: [CreditMetrics!]!
  timePatterns: [TimePattern!]!
  genreMetrics: [GenreMetrics!]!
}

type VibeMetrics {
  avgTempo: Float!
  avgEnergy: Float!
  dominantGenres: [String!]!
  successfulMoods: [String!]!
}

type RequestPattern {
  songId: ID!
  requestCount: Int!
  totalCredits: Int!
  uniqueRequesters: [ID!]!
}

type CrowdEnergyMetrics {
  timeBlock: Int!
  energyScore: Float!
}

type PlaylistRecommendations {
  vibeMetrics: VibeMetrics!
  requestPatterns: [RequestPattern!]!
  crowdEnergy: [CrowdEnergyMetrics!]!
}

type PriceSensitivity {
  songId: ID!
  pricePoint: String!
  requestCount: Int!
  conversionRate: Float!
}

type TimeBasedPricing {
  timeBlock: Int!
  priceElasticity: Float!
  demandScore: Float!
}

type GenrePricing {
  genre: String!
  priceRange: PriceRange!
  demandMetrics: DemandMetrics!
}

type PriceRange {
  suggested: Float!
  ceiling: Float!
}

type DemandMetrics {
  totalRequests: Int!
  uniqueRequesters: Int!
}

type DynamicPricingRecommendations {
  priceSensitivity: [PriceSensitivity!]!
  timeBasedPricing: [TimeBasedPricing!]!
  genrePricing: [GenrePricing!]!
}

type TransitionPattern {
  transition: GenreTransition!
  successRate: Float!
}

type GenreTransition {
  fromGenre: String!
  toGenre: String!
}

type EnergyFlow {
  timeBlock: Int!
  energyLevel: String!
  engagement: Float!
}

type MoodProgression {
  timeBlock: Int!
  mood: String!
  effectiveness: Float!
}

type SongSequenceOptimization {
  transitionPatterns: [TransitionPattern!]!
  energyFlow: [EnergyFlow!]!
  moodProgression: [MoodProgression!]!
}

extend type Query {
  songEngagementMetrics(eventId: ID!): SongEngagementMetrics!
  playlistRecommendations(eventId: ID!): PlaylistRecommendations!
  dynamicPricingRecommendations(eventId: ID!): DynamicPricingRecommendations!
  songSequenceOptimization(eventId: ID!): SongSequenceOptimization!
} 